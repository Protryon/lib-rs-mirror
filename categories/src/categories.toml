# This is where the categories available on crates.io are defined. To propose
# a change to the categories, send a pull request with your change made to this
# file.
#
# For help with TOML, see: https://github.com/toml-lang/toml
#
# Format:
#
# ```toml
# [slug]
# name = "Display name"
# description = "Give an idea of the crates that belong in this category."
#
#  [slug.categories.subcategory-slug]
#  name = "Subcategory display name, not including parent category display name"
#  description = "Give an idea of the crates that belong in this subcategory."
# ```
#
# Notes:
# - Slugs are the primary identifier. If you make a change to a category's slug,
#   crates that have been published with that slug will need to be updated to
#   use the new slug in order to stay in that category. If you only change
#   names and descriptions, those attributes CAN be updated without affecting
#   crates in that category.
# - Slugs are used in the path of URLs, so they should not contain spaces, `/`,
#   `@`, `:`, or `.`. They should be all lowercase.
#

[algorithms]
name = "Algorithms"
# string to use in page titles
title = "Rust implementation"
description = """
Rust implementations of core algorithms such as hashing, sorting, \
searching, and more.\
"""
# used on the homepage
short-description = """
Core algorithms such as hashing, sorting and searching.
"""
# linked together with subcategories
siblings = ["data-structures", "compression"]
# tags typical for this category that don't differentiate crates in the category
obvious-keywords = ["algorithms", "algorithm"]
preference = 0.8

# [api-bindings]
# name = "API bindings"
# title = "Rust API bindings"
# description = """
# Idiomatic wrappers of specific APIs for convenient access from \
# Rust. Includes HTTP API wrappers as well. Non-idiomatic or unsafe \
# bindings can be found in External FFI bindings.\
# """
# short-description = """
# Idiomatic wrappers of C library APIs for convenient access from Rust."""

[asynchronous]
name = "Asynchronous"
title = "async Rust library"
description = """
Crates to help you deal with events independently of the main program \
flow, using techniques like futures, promises, waiting, or eventing.\
"""
short-description = """
Async program flow using techniques like futures, promises, waiting, or eventing."""
obvious-keywords = ["asynchronous", "async"]
preference = 1.1

[authentication]
name = "Authentication"
title = "Rust auth library"
description = """
Crates to help with the process of confirming identities.\
"""
short-description = """
Help with the process of confirming identities."""
obvious-keywords = ["authentication", "auth", "authorization"]
preference = 1.1

[caching]
name = "Caching"
title = "Rust caching library"
description = """
Crates to store the results of previous computations in order to reuse \
the results.\
"""
short-description = """
Store the results of previous computations."""
obvious-keywords = ["cache", "caching"]
preference = 1.1

[command-line-interface]
name = "Command-line interface"
title = "CLI for Rust"
description = """
Crates to help create command line interfaces, such as argument \
parsers, line-editing, or output coloring and formatting.\
"""
short-description = """
Argument parsers, line-editing, or output coloring and formatting."""
obvious-keywords = ["cli", "command-line"]
preference = 0.9

[command-line-utilities]
name = "Command line utilities"
title = "Rust command line util"
description = """
Applications to run at the command line.\
"""
short-description = """
Applications to run at the command line."""
obvious-keywords = ["cli", "command-line", "command-line-tool", "tool", "command-line-utility"]
preference = 0.8

[compression]
name = "Compression"
title = "Rust compression library"
description = """
Algorithms for making data smaller.\
"""
short-description = """
Algorithms for making data smaller."""
obvious-keywords = ["compression", "decompression"]
preference = 1.1

[config]
name = "Configuration"
title = "Rust config library"
description = """
Crates to facilitate configuration management for applications.\
"""
short-description = """
Configuration management for applications."""
obvious-keywords = ["config", "configuration"]
preference = 1.2

[concurrency]
name = "Concurrency"
title = "Rust concurrency library"
description = """
Crates for implementing concurrent and parallel computation.\
"""
short-description = """
Implementing concurrent and parallel computation."""
obvious-keywords = ["concurrency", "parallel"]
preference = 1.1

[cryptography]
name = "Cryptography"
title = "Rust crypto library"
description = """
Algorithms intended for securing data.\
"""
short-description = """
Algorithms intended for securing data."""
obvious-keywords = ["cryptography", "crypto"]
preference = 1

[cryptography.categories.cryptocurrencies]
name = "Magic Beans"
title = "suspicious unregulated finances, in Rust"
description = """
A thriving market for magic beans doesn't make the magic beanstalk real. Cryptocurrencies use technology to obscure that they are modern versions of pump and dump scams, ponzi schemes, investment fraud, unregulated gambling, and large-scale money laundering.
The promises are empty. The real effects are proliferation of ransomware and other criminal activity, and a huge climate-affecting energy waste. It's a great way to part VCs with their money tho.
"""
short-description = "Blockchains and other scams."
obvious-keywords = ["cryptography", "crypto"]
preference = 1.2

[database]
name = "Database interfaces"
title = "db interface for Rust"
description = """
Crates to interface with database management systems.\
"""
short-description = """
Interface with database management systems."""
siblings = ["database-implementations"]
obvious-keywords = ["database", "db", "storage"]
preference = 1.1

[database-implementations]
name = "Database implementations"
title = "Rust database"
description = """
Database management systems implemented in Rust. \
Store and query large amounts of data in an efficient manner.\
"""
short-description = """
Database management systems implemented in Rust."""
siblings = ["database"]
obvious-keywords = ["database", "db", "storage"]
preference = 1

[data-structures]
name = "Data structures"
title = "data structures in Rust"
description = """
Rust implementations of particular ways of organizing data suited for \
specific purposes.\
"""
short-description = """
Rust implementations of data structures for specific purposes."""
obvious-keywords = ["data-structures", "data-structure"]
preference = 0.9

[date-and-time]
name = "Date and time"
title = "Rust date/time library"
obvious-keywords = ["date", "time"]
description = """
Crates to manage the inherent complexity of dealing with the fourth \
dimension.\
"""
short-description = """
Dealing with the fourth dimension."""
preference = 1.15

[development-tools]
name = "Development tools"
title = "Rust dev tool"
description = """
Crates that provide developer-facing features such as testing, debugging, \
linting, performance profiling, autocompletion, formatting, and more.\
"""
short-description = """
Testing, debugging, linting, performance profiling, autocompletion, formatting, and more."""
obvious-keywords = ["development-tools"]
preference = 0.9

[development-tools.categories.build-utils]
name = "Build Utils"
title = "Rust build util"
description = """
Utilities for build scripts and other build time steps.\
"""
short-description = """
Utilities for build scripts and other build time steps."""
obvious-keywords = ["build-utils", "build", "build-dependencies"]
preference = 1.1

[development-tools.categories.cargo-plugins]
name = "Cargo plugins"
title = "Cargo plug-in"
description = """
Subcommands that extend the capabilities of Cargo.\
"""
short-description = """
Subcommands that extend the capabilities of Cargo."""
obvious-keywords = ["cargo", "cargo-subcommand", "subcommand", "cli", "plugin", "crates"]
preference = 1.1

[development-tools.categories.debugging]
name = "Debugging"
title = "for debugging in Rust"
description = """
Crates to help you figure out what is going on with your code such as \
logging, tracing, or assertions.\
"""
short-description = """
Figure out what is going on with your code via logging, tracing, or assertions."""
preference = 1

[development-tools.categories.ffi]
name = "FFI"
title = "C interface for Rust"
description = """
Crates to help you better interface with other languages. This \
includes binding generators and helpful language constructs.\
"""
short-description = """
Interface with other languages. Includes binding generators and helpful language constructs."""
obvious-keywords = ["ffi"]
preference = 1.05

[development-tools.categories.procedural-macro-helpers]
name = "Procedural macros"
title = "Rust proc macro helper"
description = """
Crates to help you write procedural macros in Rust.
"""
short-description = """
Extend Rust language with procedural macros.
"""
obvious-keywords = ["proc-macro", "macro", "macros"]
preference = 1.1

[development-tools.categories.profiling]
name = "Profiling"
title = "profiling in Rust"
description = """
Crates to help you figure out the performance of your code.\
"""
short-description = """
Figure out the performance of your code."""
obvious-keywords = ["profiling", "profiler"]
preference = 1.1

[development-tools.categories.testing]
name = "Testing"
title = "Rust testing library"
description = """
Crates to help you verify the correctness of your code.\
"""
short-description = """
Verify the correctness of your code."""
obvious-keywords = ["testing", "test", "tests"]
preference = 1.1

[email]
name = "Email"
title = "Rust email library"
description = """
Crates to help with Sending, receiving, formatting, and parsing email.\
"""
short-description = """
Sending, receiving, formatting, and parsing email."""
obvious-keywords = ["email", "mail", "e-mail"]
preference = 1.2

[embedded]
name = "Embedded development"
title = "embedded dev in Rust"
description = """
Crates that are primarily useful on embedded devices or \
without an operating system.
"""
short-description = """
For embedded devices or devices without an operating system.
"""
siblings = ["hardware-support", "no-std"]
obvious-keywords = ["embedded"]
preference = 1.2

[emulators]
name = "Emulators"
title = "emulator in Rust"
description = """
Emulators allow one computer to behave like another, often to allow \
running software that is not natively available on the host \
computer. Video game systems are commonly emulated.\
"""
short-description = """
Run software or games not available natively on the host computer."""
obvious-keywords = ["emulator", "emulators"]
preference = 1.1

[encoding]
name = "Encoding"
standalone-name = "Encoding data"
title = "Rust data encoding library"
description = """
Encoding and/or decoding data from one data format to another.\
"""
short-description = """
Encoding and/or decoding data from one data format to another."""
siblings = ["parser-implementations"]
obvious-keywords = ["encoding", "serialization", "encode", "decode"]
preference = 1

# [external-ffi-bindings]
# name = "External FFI bindings"
# title = "Rust bindings for external library"
# description = """
# Direct Rust FFI bindings to libraries written in other languages; \
# often denoted by a -sys suffix. Safe and idiomatic wrappers are in \
# the API bindings category.
# """
# short-description = """
# Direct Rust FFI bindings to libraries written in other languages
# """

[filesystem]
name = "Filesystem"
title = "Rust filesystem library"
description = """
Crates for dealing with files and filesystems.\
"""
short-description = """
Crates for dealing with files and filesystems."""
obvious-keywords = ["filesystem", "file", "fs", "directory"]
preference = 1.1

[game-development]
name = "Game dev"
title = "Rust game dev"
description = """
Crates for creating games.\
"""
short-description = """
Crates for creating games."""
obvious-keywords = ["engine", "gamedev", "game-dev", "game", "game-engine", "game-development"]
preference = 1.2

[games]
name = "Games"
title = "game in Rust"
description = """
Applications for fun and entertainment. If Rust the video game were \
implemented in Rust the programming language, it would belong in this \
category. Libraries to help create video games are in the \
Game engines category.\
"""
short-description = """
Fun and entertainment. Games implemented in the Rust programming language."""
obvious-keywords = ["game", "games", "play"]
preference = 1

# lots of dupes with graphics-api category
# [graphics]
# name = "Graphics"
# description = """
# Crates for graphics libraries and applications, including raster and vector \
# graphics primitives such as geometry, curves, and color.\
# """

[gui]
name = "GUI"
title = "Rust GUI library"
description = """
Crates to help you create a graphical user interface.\
"""
short-description = """
Create a graphical user interface."""
obvious-keywords = ["gui", "ui", "user-interface", "interface"]
preference = 1.1

[hardware-support]
name = "Hardware support"
title = "Rust HW library"
description = """
Crates to interface with specific CPU or other hardware features.\
"""
short-description = """
Interface with specific CPU or other hardware features."""
siblings = ["embedded"]
obvious-keywords = ["hardware", "hw"]
preference = 1.05

[internationalization]
name = "Internationalization (i18n)"
title = "Rust i18n library"
description = """
Crates to develop software adapting to various \
languages and regions. Including localization (L10n) software.\
"""
short-description = """
and localization (l10n). Develop software for various languages and regions."""
obvious-keywords = ["localization", "i18n", "internationalization", "l10n", "text"]
preference = 1.1

# merged into internationalization
# [localization]
# name = "Localization (L10n)"
# title = "Rust localization"
# description = """
# Crates to help adapting internationalized software to specific \
# languages and regions.\
# """
# short-description = """
# Internationalizing software to specific languages and regions."""

[memory-management]
name = "Memory management"
title = "Rust memory management library"
description = """
Crates to help with allocation, memory mapping, garbage collection, \
reference counting, or interfaces to foreign memory managers.\
"""
short-description = """
Allocation, memory mapping, garbage collection, reference counting, or interfaces to foreign memory managers."""
obvious-keywords = ["memory", "memory-allocator", "memory-management"]
preference = 1.1

[multimedia]
name = "Multimedia"
title = "multimedia in Rust"
description = """
Crates that provide audio, video, and image processing or rendering \
engines.\
"""
short-description = """
Audio, video, and image processing or rendering engines."""
obvious-keywords = ["multimedia", "media"]
preference = 0.95

[multimedia.categories.audio]
name = "Audio"
title = "Rust audio library"
description = """
Crates that record, output, or process audio.
"""
short-description = """
Record, output, or process audio.
"""
obvious-keywords = ["audio", "sound", "media"]
preference = 1.2

[multimedia.categories.video]
name = "Video"
title = "Rust video library"
description = """
Crates that record, output, or process video.
"""
short-description = """
Record, output, or process video.
"""
obvious-keywords = ["video"]
preference = 1.2

[multimedia.categories.images]
name = "Images"
title = "Rust image library"
description = """
Crates that process images or generate graphics.
"""
short-description = """
Process or make images.
"""
obvious-keywords = ["image", "images", "graphics"]
preference = 1.1

[multimedia.categories.encoding]
name = "Encoding"
standalone-name = "Encoding media"
title = "Rust media encoding library"
description = """
Crates that encode or decode binary data in multimedia formats.
"""
short-description = """
Encode or decode binary data in multimedia formats.
"""
obvious-keywords = ["codec", "encoding"]
preference = 0.9

[network-programming]
name = "Network programming"
title = "Rust network library"
description = """
Crates dealing with higher-level network protocols such as FTP, HTTP, \
or SSH, or lower-level network protocols such as TCP or UDP.\
"""
short-description = """
Network protocols such as FTP, HTTP, or SSH, or lower-level TCP or UDP."""
siblings = ["authentication", "email"]
obvious-keywords = ["network", "networking"]
preference = 1.1

[no-std]
name = "No standard library"
title = "bare metal library for Rust"
description = """
Crates that are able to function without the Rust standard library.
"""
short-description = """
Libraries that function without the Rust standard library.
"""
siblings = ["embedded"]
obvious-keywords = ["no_std", "no-std"]
preference = 0.2

[os]
name = "Operating systems"
title = "Rust OS-specific library"
description = """
Bindings to operating system-specific APIs.\
"""
short-description = """
Bindings to operating system-specific APIs."""
obvious-keywords = ["os", "system", "platform"]
preference = 1

[os.categories.macos-apis]
name = "macOS and iOS APIs"
title = "Rust API for macOS/iOS"
obvious-keywords = ["macos", "apple", "mac", "osx"]
description = """
Interfacing with macOS or iOS/iPadOS APIs, and other Apple-specific technologies.\
"""
short-description = """
Bindings to Apple-specific APIs."""
preference = 1

[os.categories.unix-apis]
name = "Unix APIs"
title = "Rust API for Unix"
description = """
Bindings to Unix-specific APIs, including Linux and *BSD systems.\
"""
short-description = """
Bindings to Unix-specific APIs."""
obvious-keywords = ["unix", "system", "linux"]
preference = 1.1

[os.categories.windows-apis]
name = "Windows APIs"
title = "Rust API Windows"
description = """
Bindings to Microsoft Windows-specific APIs.\
"""
short-description = """
Bindings to Windows-specific APIs."""
obvious-keywords = ["windows", "win32", "winapi"]
preference = 1.1

[parser-implementations]
name = "Parser implementations"
title = "Rust parser"
description = """
Parsers implemented for particular formats or languages.\
"""
short-description = """
Parse data formats or languages."""
siblings = ["parsing"]
obvious-keywords = ["parser", "parsing", "parse", "file"]
preference = 1.1

[parsing]
name = "Parser tooling"
title = "Parser"
description = """
Utility libraries for writing or generating parsers for any file format.
"""
short-description = """
Low-level tools and parser generators."""
siblings = ["parser-implementations"]
obvious-keywords = ["parser", "parsing", "parse"]
preference = 0.9

[rendering]
name = "Rendering"
title = "graphics rendering in Rust"
description = """
Real-time or offline rendering of 2D or 3D graphics, \
usually with the help of a graphics card.\
"""
short-description = """
Real-time or offline rendering of 2D or 3D graphics, usually on a GPU."""
obvious-keywords = ["rendering", "graphics"]
preference = 0.9

[rendering.categories.engine]
name = "Rendering engine"
title = "Rust rendering engine"
description = """
High-level solutions for rendering on the screen.\
"""
short-description = """
High-level solutions for rendering on the screen."""
obvious-keywords = ["engine", "engines", "rendering", "renderer"]
preference = 0.9

[rendering.categories.graphics-api]
name = "Graphics APIs"
title = "Rust gfx library"
description = """
Crates that provide direct access to the hardware's or the operating \
system's rendering capabilities.\
"""
short-description = """
Direct access to the hardware's or the operating system's rendering capabilities."""
obvious-keywords = ["graphics", "api", "rendering"]
preference = 1

[rendering.categories.data-formats]
name = "Data formats"
standalone-name = "Gfx data formats"
title = "data format for Rust"
description = """
Loading and parsing of data formats related to 2D or 3D rendering, like \
3D models or animation sheets.\
"""
short-description = """
Loading and parsing of data for 2D/3D rendering, like 3D models or animations."""
obvious-keywords = ["formats", "format"]
preference = 1

[rust-patterns]
name = "Rust patterns"
title = "Rust library"
description = """
Shared solutions for particular situations specific to programming in \
Rust.\
"""
short-description = """
Shared solutions for particular situations specific to programming in Rust."""
siblings = ["no-std", "memory-management"]
obvious-keywords = ["rust"]
preference = 0.95

[science]
name = "Science"
title = "Rust library"
description = """
Crates related to solving problems involving math, physics, chemistry, \
biology, machine learning, geoscience, and other scientific fields.\
"""
short-description = """
Solving problems involving math, physics, and other scientific fields."""
preference = 1
obvious-keywords = ["science"]

[science.categories.robotics]
name = "Robotics"
title = "Robotics"
short-description = "Crates related to robotics"
siblings = ["embedded"]
description = """
Crates related to robotics. Build firmware for robots, drones and autonomous machines."""
preference = 0.2

[science.categories.math]
# crates-io has it as mathematics at the top level
name = "Math"
title = "Rust math library"
description = """
Crates related to solving mathematical problems.\
"""
short-description = """
Solving problems involving math and logic."""
obvious-keywords = ["math", "maths", "mathematics", "science"]
preference = 1.1

[science.categories.ml]
# fake
name = "Machine learning"
title = "ML/AI/statistics in Rust"
description = """
Artificial intelligence, neural networks, deep learning, recommendation systems, and statistics.\
"""
short-description = """AI, ML, NN, etc."""
obvious-keywords = ["ml", "machine-learning", "ai"]
preference = 1.2

[simulation]
name = "Simulation"
title = "Rust simulation library"
description = """
Crates used to model or construct models for some activity, e.g. to \
simulate a networking protocol.\
"""
short-description = """
Model or construct models for some activity, e.g. to simulate a networking protocol."""
preference = 1.1

[template-engine]
name = "Template engine"
title = "Rust template engine"
description = """
Crates designed to combine templates with data to produce result \
documents, usually with an emphasis on processing text.\
"""
short-description = """
Combine templates with data to produce documents, usually with an emphasis on processing text."""
obvious-keywords = ["template", "templating", "language"]
preference = 1.1

[text-editors]
name = "Text editors"
title = "Rust text editor"
description = """
Applications for editing text.\
"""
short-description = """
Applications for editing text."""
obvious-keywords = ["text", "editor", "text-editor"]
preference = 1

[text-processing]
name = "Text processing"
title = "Rust text processing library"
description = """
Crates to deal with the complexities of human language when expressed \
in textual form.\
"""
short-description = """
Deal with the complexities of human language when expressed in textual form."""
siblings = ["value-formatting", "template-engine"]
obvious-keywords = ["text", "processing", "string"]
preference = 1.1

[value-formatting]
name = "Value formatting"
title = "Rust formatting library"
description = """
Crates to allow an application to format values for display to a user, \
potentially adapting the display to various languages and regions.\
"""
short-description = """
Format values for display to a user, potentially adapting the display to various languages and regions."""
obvious-keywords = ["formatting", "format", "string"]
preference = 1

[visualization]
name = "Visualization"
title = "Rust data vis library"
description = """
Ways to view data, such as plotting or graphing.\
"""
short-description = """
Ways to view data, such as plotting or graphing."""
obvious-keywords = ["visualization"]
preference = 1

[wasm]
name = "WebAssembly"
title = "WebAssembly in Rust"
description = """
Crates for use when targeting WebAssembly, or for manipulating WebAssembly.\
"""
short-description = """
Targeting or manipulating WebAssembly."""
obvious-keywords = ["web", "wasm", "webassembly", "web-assembly", "webasm"]
preference = 1.1

[web-programming]
name = "Web programming"
title = "Rust web dev library"
description = """
Crates to create applications for the web.\
"""
short-description = """
Create applications for the Web."""
siblings = ["wasm"]
obvious-keywords = ["web", "http", "wasm", "webasm"]
preference = 1

[web-programming.categories.http-client]
name = "HTTP client"
title = "Rust HTTP client"
description = """
Crates to make HTTP network requests.\
"""
short-description = """
Make HTTP network requests."""
obvious-keywords = ["web", "http", "client", "http-client"]
preference = 1

[web-programming.categories.http-server]
name = "HTTP server"
title = "Rust HTTP server"
description = """
Crates to serve data over HTTP.\
"""
short-description = """
Serve data over HTTP."""
obvious-keywords = ["web", "http", "server", "http-server"]
preference = 1

[web-programming.categories.websocket]
name = "WebSocket"
title = "WebSocket library in Rust"
description = """
Crates to communicate over the WebSocket protocol.\
"""
short-description = """
Communicate over the WebSocket protocol."""
obvious-keywords = ["websocket", "websockets", "ws", "web"]
preference = 1.2

[uncategorized]
name = "Uncategorized"
title = "Miscellaneous crates"
description = """
Crates that don't have enough metadata to be assigned to any category. Please fix them!
"""
short-description = """
Everything else goes here."""
preference = 0.01
obvious-keywords = []
